% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/network_utils.R
\name{plot_cor_network}
\alias{plot_cor_network}
\title{Correlation network}
\usage{
plot_cor_network(
  x,
  colour_edge = c("#4DAF4A", "#EE6363"),
  colour_node = c("white", "#3D3D3D"),
  cex = 1,
  method = "spearman",
  method_adjust = "BH",
  cutoff = 0.75,
  digits = 2,
  ...
)
}
\arguments{
\item{x}{Data.frame with column and row names.}

\item{colour_edge}{Color vector of length 2 corresponding respectively to
a positive or negative correlation.}

\item{colour_node}{Color vector of length 2 corresponding respectively to
background and node label.}

\item{cex}{Double for the magnification factor for the text relative to the
default.}

\item{method}{Character for the test method ('pearson' or 'spearman').}

\item{method_adjust}{Character for the multiple correction test among
'BH', 'BY', 'bonferroni', 'fdr', 'hochberg', 'holm', 'hommel', 'none'}

\item{cutoff}{Double to filter correlations}

\item{digits}{Integer for the number of decimals.}

\item{...}{Additional parameters in \link{plot_network_dyn}.}
}
\value{
visNetwork object
}
\description{
Plot a correlation network. The higher the number of connections, the larger
the node. By default, negative correlations are shown in red, positive correlations in
green.
}
\examples{
library(magrittr)
library(RColorBrewer)
x <- runif(20)
x <- lapply(
    c(1, -1),
    function(i) sapply(seq(10), function(j) x * i + runif(10, max = 1))
) \%>\%
    Reduce(cbind, .) \%>\%
    set_colnames(paste("Variable", seq(20)))
plot_cor_network(x)
plot_cor_network(
    x,
    colour_edge = c(
        brewer.pal(3, "Pastel1")[3],
        brewer.pal(3, "Pastel1")[1]
    ),
    colour_node = c("white", "black"),
    cex = 1.5,
    method = "pearson",
    method_adjust = "none",
    cutoff = 0.7,
    digits = 1
)
}
